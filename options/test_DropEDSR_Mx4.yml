name: MCDEDSR_x4
model_type: SRModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# test dataset settings
datasets:
  test_1:  # the 1st test dataset
    name: Set5
    type: PairedImageDataset
    dataroot_gt: data/Set5/GTmod12
    dataroot_lq: data/Set5/LRbicx4_gaussian_n5_v2
    io_backend:
      type: disk
  test_2:  # the 2nd test dataset
    name: Set14
    type: PairedImageDataset
    dataroot_gt: data/Set14/GTmod12
    dataroot_lq: data/Set14/LRbicx4_gaussian_n5_v2
    io_backend:
      type: disk
 test_3:
   name: Urban100
   type: PairedImageDataset
   dataroot_gt: data/Urban100/GTmod12
   dataroot_lq: data/Urban100/LRbicx4_gaussian_n5_v2
   io_backend:
     type: disk
 test_4:
   name: BSDS100
   type: PairedImageDataset
   dataroot_gt: data/BSDS100/GTmod12
   dataroot_lq: data/BSDS100/LRbicx4_gaussian_n5_v2
   io_backend:
     type: disk


# network structures
network_g:
  type: DropEDSR_v2
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 16
  upscale: 4
  res_scale: 1
  img_range: 255.
  rgb_mean: [0.4488, 0.4371, 0.4040]
  dropout_rate: 0.1

# path
path:
  pretrain_network_g: experiments/MCDEDSR/models/net_g.pth
  param_key_g: params
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false
